//
//         NAME      INSTR_CODE        CYCLES       FLAGS
//

// fixed-point transfer instructions
SH4_INSTR(MOVI,      1110nnnniiiiiiii, 1, 0)
SH4_INSTR(MOVWLPC,   1001nnnndddddddd, 1, 0)
SH4_INSTR(MOVLLPC,   1101nnnndddddddd, 1, 0)
SH4_INSTR(MOV,       0110nnnnmmmm0011, 1, 0)
SH4_INSTR(MOVBS,     0010nnnnmmmm0000, 1, 0)
SH4_INSTR(MOVWS,     0010nnnnmmmm0001, 1, 0)
SH4_INSTR(MOVLS,     0010nnnnmmmm0010, 1, 0)
SH4_INSTR(MOVBL,     0110nnnnmmmm0000, 1, 0)
SH4_INSTR(MOVWL,     0110nnnnmmmm0001, 1, 0)
SH4_INSTR(MOVLL,     0110nnnnmmmm0010, 1, 0)
SH4_INSTR(MOVBM,     0010nnnnmmmm0100, 1, 0)
SH4_INSTR(MOVWM,     0010nnnnmmmm0101, 1, 0)
SH4_INSTR(MOVLM,     0010nnnnmmmm0110, 1, 0)
SH4_INSTR(MOVBP,     0110nnnnmmmm0100, 1, 0)
SH4_INSTR(MOVWP,     0110nnnnmmmm0101, 1, 0)
SH4_INSTR(MOVLP,     0110nnnnmmmm0110, 1, 0)
SH4_INSTR(MOVBS0D,   10000000nnnndddd, 1, 0)
SH4_INSTR(MOVWS0D,   10000001nnnndddd, 1, 0)
SH4_INSTR(MOVLSMD,   0001nnnnmmmmdddd, 1, 0)
SH4_INSTR(MOVBLD0,   10000100mmmmdddd, 1, 0)
SH4_INSTR(MOVWLD0,   10000101mmmmdddd, 1, 0)
SH4_INSTR(MOVLLDN,   0101nnnnmmmmdddd, 1, 0)
SH4_INSTR(MOVBS0,    0000nnnnmmmm0100, 1, 0)
SH4_INSTR(MOVWS0,    0000nnnnmmmm0101, 1, 0)
SH4_INSTR(MOVLS0,    0000nnnnmmmm0110, 1, 0)
SH4_INSTR(MOVBL0,    0000nnnnmmmm1100, 1, 0)
SH4_INSTR(MOVWL0,    0000nnnnmmmm1101, 1, 0)
SH4_INSTR(MOVLL0,    0000nnnnmmmm1110, 1, 0)
SH4_INSTR(MOVBS0G,   11000000dddddddd, 1, 0)
SH4_INSTR(MOVWS0G,   11000001dddddddd, 1, 0)
SH4_INSTR(MOVLS0G,   11000010dddddddd, 1, 0)
SH4_INSTR(MOVBLG0,   11000100dddddddd, 1, 0)
SH4_INSTR(MOVWLG0,   11000101dddddddd, 1, 0)
SH4_INSTR(MOVLLG0,   11000110dddddddd, 1, 0)
SH4_INSTR(MOVA,      11000111dddddddd, 1, 0)
SH4_INSTR(MOVT,      0000nnnn00101001, 1, 0)
SH4_INSTR(SWAPB,     0110nnnnmmmm1000, 1, 0)
SH4_INSTR(SWAPW,     0110nnnnmmmm1001, 1, 0)
SH4_INSTR(XTRCT,     0010nnnnmmmm1101, 1, 0)


// arithmetric operation instructions
SH4_INSTR(ADD,       0011nnnnmmmm1100, 1, 0)
SH4_INSTR(ADDI,      0111nnnniiiiiiii, 1, 0)
SH4_INSTR(ADDC,      0011nnnnmmmm1110, 1, OP_FLAG_SET_T)
SH4_INSTR(ADDV,      0011nnnnmmmm1111, 1, OP_FLAG_SET_T)
SH4_INSTR(CMPEQI,    10001000iiiiiiii, 1, OP_FLAG_SET_T)
SH4_INSTR(CMPEQ,     0011nnnnmmmm0000, 1, OP_FLAG_SET_T)
SH4_INSTR(CMPHS,     0011nnnnmmmm0010, 1, OP_FLAG_SET_T)
SH4_INSTR(CMPGE,     0011nnnnmmmm0011, 1, OP_FLAG_SET_T)
SH4_INSTR(CMPHI,     0011nnnnmmmm0110, 1, OP_FLAG_SET_T)
SH4_INSTR(CMPGT,     0011nnnnmmmm0111, 1, OP_FLAG_SET_T)
SH4_INSTR(CMPPZ,     0100nnnn00010001, 1, OP_FLAG_SET_T)
SH4_INSTR(CMPPL,     0100nnnn00010101, 1, OP_FLAG_SET_T)
SH4_INSTR(CMPSTR,    0010nnnnmmmm1100, 1, OP_FLAG_SET_T)
SH4_INSTR(DIV0S,     0010nnnnmmmm0111, 1, OP_FLAG_SET_T)
SH4_INSTR(DIV0U,     0000000000011001, 1, OP_FLAG_SET_T)
SH4_INSTR(DIV1,      0011nnnnmmmm0100, 1, OP_FLAG_SET_T)
SH4_INSTR(DMULS,     0011nnnnmmmm1101, 2, 0)
SH4_INSTR(DMULU,     0011nnnnmmmm0101, 2, 0)
SH4_INSTR(DT,        0100nnnn00010000, 1, OP_FLAG_SET_T)
SH4_INSTR(EXTSB,     0110nnnnmmmm1110, 1, 0)
SH4_INSTR(EXTSW,     0110nnnnmmmm1111, 1, 0)
SH4_INSTR(EXTUB,     0110nnnnmmmm1100, 1, 0)
SH4_INSTR(EXTUW,     0110nnnnmmmm1101, 1, 0)
SH4_INSTR(MACL,      0000nnnnmmmm1111, 2, 0)
SH4_INSTR(MACW,      0100nnnnmmmm1111, 2, 0)
SH4_INSTR(MULL,      0000nnnnmmmm0111, 2, 0)
SH4_INSTR(MULS,      0010nnnnmmmm1111, 2, 0)
SH4_INSTR(MULU,      0010nnnnmmmm1110, 2, 0)
SH4_INSTR(NEG,       0110nnnnmmmm1011, 1, 0)
SH4_INSTR(NEGC,      0110nnnnmmmm1010, 1, OP_FLAG_SET_T)
SH4_INSTR(SUB,       0011nnnnmmmm1000, 1, 0)
SH4_INSTR(SUBC,      0011nnnnmmmm1010, 1, OP_FLAG_SET_T)
SH4_INSTR(SUBV,      0011nnnnmmmm1011, 1, OP_FLAG_SET_T)


// logic operation instructions
SH4_INSTR(AND,       0010nnnnmmmm1001, 1, 0)
SH4_INSTR(ANDI,      11001001iiiiiiii, 1, 0)
SH4_INSTR(ANDB,      11001101iiiiiiii, 4, 0)
SH4_INSTR(NOT,       0110nnnnmmmm0111, 1, 0)
SH4_INSTR(OR,        0010nnnnmmmm1011, 1, 0)
SH4_INSTR(ORI,       11001011iiiiiiii, 1, 0)
SH4_INSTR(ORB,       11001111iiiiiiii, 4, 0)
SH4_INSTR(TAS,       0100nnnn00011011, 5, OP_FLAG_SET_T)
SH4_INSTR(TST,       0010nnnnmmmm1000, 1, OP_FLAG_SET_T)
SH4_INSTR(TSTI,      11001000iiiiiiii, 1, OP_FLAG_SET_T)
SH4_INSTR(TSTB,      11001100iiiiiiii, 3, OP_FLAG_SET_T)
SH4_INSTR(XOR,       0010nnnnmmmm1010, 1, 0)
SH4_INSTR(XORI,      11001010iiiiiiii, 1, 0)
SH4_INSTR(XORB,      11001110iiiiiiii, 4, 0)


// shift instructions
SH4_INSTR(ROTL,      0100nnnn00000100, 1, OP_FLAG_SET_T)
SH4_INSTR(ROTR,      0100nnnn00000101, 1, OP_FLAG_SET_T)
SH4_INSTR(ROTCL,     0100nnnn00100100, 1, OP_FLAG_SET_T)
SH4_INSTR(ROTCR,     0100nnnn00100101, 1, OP_FLAG_SET_T)
SH4_INSTR(SHAD,      0100nnnnmmmm1100, 1, 0)
SH4_INSTR(SHAL,      0100nnnn00100000, 1, OP_FLAG_SET_T)
SH4_INSTR(SHAR,      0100nnnn00100001, 1, OP_FLAG_SET_T)
SH4_INSTR(SHLD,      0100nnnnmmmm1101, 1, 0)
SH4_INSTR(SHLL,      0100nnnn00000000, 1, OP_FLAG_SET_T)
SH4_INSTR(SHLR,      0100nnnn00000001, 1, OP_FLAG_SET_T)
SH4_INSTR(SHLL2,     0100nnnn00001000, 1, 0)
SH4_INSTR(SHLR2,     0100nnnn00001001, 1, 0)
SH4_INSTR(SHLL8,     0100nnnn00011000, 1, 0)
SH4_INSTR(SHLR8,     0100nnnn00011001, 1, 0)
SH4_INSTR(SHLL16,    0100nnnn00101000, 1, 0)
SH4_INSTR(SHLR16,    0100nnnn00101001, 1, 0)


// branch instructions
SH4_INSTR(BF,        10001011dddddddd, 1, OP_FLAG_CONDITIONAL | OP_FLAG_BRANCH)
SH4_INSTR(BFS,       10001111dddddddd, 1, OP_FLAG_CONDITIONAL | OP_FLAG_BRANCH | OP_FLAG_DELAYED)
SH4_INSTR(BT,        10001001dddddddd, 1, OP_FLAG_CONDITIONAL | OP_FLAG_BRANCH)
SH4_INSTR(BTS,       10001101dddddddd, 1, OP_FLAG_CONDITIONAL | OP_FLAG_BRANCH | OP_FLAG_DELAYED)
SH4_INSTR(BRA,       1010dddddddddddd, 1, OP_FLAG_BRANCH | OP_FLAG_DELAYED)
SH4_INSTR(BRAF,      0000nnnn00100011, 2, OP_FLAG_BRANCH | OP_FLAG_DELAYED)
SH4_INSTR(BSR,       1011dddddddddddd, 1, OP_FLAG_BRANCH | OP_FLAG_DELAYED)
SH4_INSTR(BSRF,      0000nnnn00000011, 2, OP_FLAG_BRANCH | OP_FLAG_DELAYED)
SH4_INSTR(JMP,       0100nnnn00101011, 2, OP_FLAG_BRANCH | OP_FLAG_DELAYED)
SH4_INSTR(JSR,       0100nnnn00001011, 2, OP_FLAG_BRANCH | OP_FLAG_DELAYED)
SH4_INSTR(RTS,       0000000000001011, 2, OP_FLAG_BRANCH | OP_FLAG_DELAYED)


// system control instructions
SH4_INSTR(CLRMAC,    0000000000101000, 1, 0)
SH4_INSTR(CLRS,      0000000001001000, 1, 0)
SH4_INSTR(CLRT,      0000000000001000, 1, OP_FLAG_SET_T)
SH4_INSTR(LDCSR,     0100mmmm00001110, 4, 0)
SH4_INSTR(LDCGBR,    0100mmmm00011110, 3, 0)
SH4_INSTR(LDCVBR,    0100mmmm00101110, 1, 0)
SH4_INSTR(LDCSSR,    0100mmmm00111110, 1, 0)
SH4_INSTR(LDCSPC,    0100mmmm01001110, 1, 0)
SH4_INSTR(LDCDBR,    0100mmmm11111010, 1, 0)
SH4_INSTR(LDCRBANK,  0100mmmm1nnn1110, 1, 0)
SH4_INSTR(LDCMSR,    0100mmmm00000111, 4, 0)
SH4_INSTR(LDCMGBR,   0100mmmm00010111, 3, 0)
SH4_INSTR(LDCMVBR,   0100mmmm00100111, 1, 0)
SH4_INSTR(LDCMSSR,   0100mmmm00110111, 1, 0)
SH4_INSTR(LDCMSPC,   0100mmmm01000111, 1, 0)
SH4_INSTR(LDCMDBR,   0100mmmm11110110, 1, 0)
SH4_INSTR(LDCMRBANK, 0100mmmm1nnn0111, 1, 0)
SH4_INSTR(LDSMACH,   0100mmmm00001010, 1, 0)
SH4_INSTR(LDSMACL,   0100mmmm00011010, 1, 0)
SH4_INSTR(LDSPR,     0100mmmm00101010, 2, 0)
SH4_INSTR(LDSMMACH,  0100mmmm00000110, 1, 0)
SH4_INSTR(LDSMMACL,  0100mmmm00010110, 1, 0)
SH4_INSTR(LDSMPR,    0100mmmm00100110, 2, 0)
SH4_INSTR(MOVCAL,    0000nnnn11000011, 1, 0)
SH4_INSTR(NOP,       0000000000001001, 1, 0)
SH4_INSTR(OCBI,      0000nnnn10010011, 1, 0)
SH4_INSTR(OCBP,      0000nnnn10100011, 1, 0)
SH4_INSTR(OCBWB,     0000nnnn10110011, 1, 0)
SH4_INSTR(PREF,      0000nnnn10000011, 1, 0)
SH4_INSTR(RTE,       0000000000101011, 5, OP_FLAG_BRANCH | OP_FLAG_DELAYED)
SH4_INSTR(SETS,      0000000001011000, 1, 0)
SH4_INSTR(SETT,      0000000000011000, 1, OP_FLAG_SET_T)
SH4_INSTR(SLEEP,     0000000000011011, 4, 0)
SH4_INSTR(STCSR,     0000nnnn00000010, 2, 0)
SH4_INSTR(STCGBR,    0000nnnn00010010, 2, 0)
SH4_INSTR(STCVBR,    0000nnnn00100010, 2, 0)
SH4_INSTR(STCSSR,    0000nnnn00110010, 2, 0)
SH4_INSTR(STCSPC,    0000nnnn01000010, 2, 0)
SH4_INSTR(STCSGR,    0000nnnn00111010, 3, 0)
SH4_INSTR(STCDBR,    0000nnnn11111010, 2, 0)
SH4_INSTR(STCRBANK,  0000nnnn1mmm0010, 2, 0)
SH4_INSTR(STCMSR,    0100nnnn00000011, 2, 0)
SH4_INSTR(STCMGBR,   0100nnnn00010011, 2, 0)
SH4_INSTR(STCMVBR,   0100nnnn00100011, 2, 0)
SH4_INSTR(STCMSSR,   0100nnnn00110011, 2, 0)
SH4_INSTR(STCMSPC,   0100nnnn01000011, 2, 0)
SH4_INSTR(STCMSGR,   0100nnnn00110010, 3, 0)
SH4_INSTR(STCMDBR,   0100nnnn11110010, 2, 0)
SH4_INSTR(STCMRBANK, 0100nnnn1mmm0011, 2, 0)
SH4_INSTR(STSMACH,   0000nnnn00001010, 1, 0)
SH4_INSTR(STSMACL,   0000nnnn00011010, 1, 0)
SH4_INSTR(STSPR,     0000nnnn00101010, 2, 0)
SH4_INSTR(STSMMACH,  0100nnnn00000010, 1, 0)
SH4_INSTR(STSMMACL,  0100nnnn00010010, 1, 0)
SH4_INSTR(STSMPR,    0100nnnn00100010, 2, 0)
SH4_INSTR(TRAPA,     11000011iiiiiiii, 7, OP_FLAG_BRANCH)


// floating-point single and double precision instructions
SH4_INSTR(FLDI0,     1111nnnn10001101, 1, 0)
SH4_INSTR(FLDI1,     1111nnnn10011101, 1, 0)
SH4_INSTR(FMOV,      1111nnnnmmmm1100, 1, 0)
SH4_INSTR(FMOVLD,    1111nnnnmmmm1000, 1, 0)
SH4_INSTR(FMOVILD,   1111nnnnmmmm0110, 1, 0)
SH4_INSTR(FMOVRS,    1111nnnnmmmm1001, 1, 0)
SH4_INSTR(FMOVST,    1111nnnnmmmm1010, 1, 0)
SH4_INSTR(FMOVSV,    1111nnnnmmmm1011, 1, 0)
SH4_INSTR(FMOVIST,   1111nnnnmmmm0111, 1, 0)
SH4_INSTR(FLDS,      1111mmmm00011101, 1, 0)
SH4_INSTR(FSTS,      1111nnnn00001101, 1, 0)
SH4_INSTR(FABS,      1111nnnn01011101, 1, 0)
SH4_INSTR(FSRRA,     1111nnnn01111101, 1, 0)
SH4_INSTR(FADD,      1111nnnnmmmm0000, 1, 0)
SH4_INSTR(FCMPEQ,    1111nnnnmmmm0100, 2, OP_FLAG_SET_T)
SH4_INSTR(FCMPGT,    1111nnnnmmmm0101, 2, OP_FLAG_SET_T)
SH4_INSTR(FDIV,      1111nnnnmmmm0011, 1, 0)
SH4_INSTR(FLOAT,     1111nnnn00101101, 1, 0)
SH4_INSTR(FMAC,      1111nnnnmmmm1110, 1, 0)
SH4_INSTR(FMUL,      1111nnnnmmmm0010, 1, 0)
SH4_INSTR(FNEG,      1111nnnn01001101, 1, 0)
SH4_INSTR(FSQRT,     1111nnnn01101101, 1, 0)
SH4_INSTR(FSUB,      1111nnnnmmmm0001, 1, 0)
SH4_INSTR(FTRC,      1111mmmm00111101, 1, 0)


// floating-point double precision instructions,
// some merged with single precision instructions
SH4_INSTR(FCNVDS,    1111mmm010111101, 1, 0)
SH4_INSTR(FCNVSD,    1111nnn010101101, 1, 0)


// floating-point control instructions
SH4_INSTR(LDSFPSCR,  0100mmmm01101010, 1, OP_FLAG_SET_FPSCR)
SH4_INSTR(LDSFPUL,   0100mmmm01011010, 1, 0)
SH4_INSTR(LDSMFPSCR, 0100mmmm01100110, 1, OP_FLAG_SET_FPSCR)
SH4_INSTR(LDSMFPUL,  0100mmmm01010110, 1, 0)
SH4_INSTR(STSFPSCR,  0000nnnn01101010, 1, 0)
SH4_INSTR(STSFPUL,   0000nnnn01011010, 1, 0)
SH4_INSTR(STSMFPSCR, 0100nnnn01100010, 1, 0)
SH4_INSTR(STSMFPUL,  0100nnnn01010010, 1, 0)


// floating-point graphics acceleration instructions,
// some merged with single precision instructions
SH4_INSTR(FIPR,      1111nnmm11101101, 1, 0)
SH4_INSTR(FSCA,      1111nnn011111101, 1, 0)
SH4_INSTR(FTRV,      1111nn0111111101, 1, 0)
SH4_INSTR(FRCHG,     1111101111111101, 1, OP_FLAG_SET_FPSCR)
SH4_INSTR(FSCHG,     1111001111111101, 1, OP_FLAG_SET_FPSCR)
